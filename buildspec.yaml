version: 0.2
 
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - aws --version
      - curl 169.254.170.2$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq 'to_entries | [ .[] | select(.key | (contains("Expiration") or contains("RoleArn"))  | not) ] |  map(if .key == "AccessKeyId" then . + {"key":"AWS_ACCESS_KEY_ID"} else . end) | map(if .key == "SecretAccessKey" then . + {"key":"AWS_SECRET_ACCESS_KEY"} else . end) | map(if .key == "Token" then . + {"key":"AWS_SESSION_TOKEN"} else . end) | map("export \(.key)=\(.value)") | .[]' -r > /tmp/cred.txt # work around https://github.com/hashicorp/terraform/issues/8746
      - chmod +x /tmp/cred.txt
      - . /tmp/cred.txt
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region us-east-1 --no-include-email)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t nginx:latest .
      - docker tag nginx:latest 020046395185.dkr.ecr.us-east-1.amazonaws.com/nginx:latest      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 020046395185.dkr.ecr.us-east-1.amazonaws.com/nginx:latest
      - printf '{"ImageURI":"%s"}' 020046395185.dkr.ecr.us-east-1.amazonaws.com/nginx:latest  > imageDetail.json
      - sed -i 's/<APP_NAME>/'nginx'/g' appspec.yaml taskdef.json
      - sed -i 's/<SERVICE_PORT>/80/g' appspec.yaml taskdef.json
      - sed -i 's/<AWS_ACCOUNT_ID>/020046395185/g' taskdef.json
      - sed -i 's/<MEMORY_RESV>/128/g' taskdef.json
      - sed -i 's/<IMAGE_NAME>/'020046395185'\.dkr\.ecr\.'us-east-1'\.amazonaws.com\/'nginx'\:'latest'/g' taskdef.json
artifacts:
  files: 
    - imageDetail.json
    - appspec.yaml
    - taskdef.json